/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --spacing: 0.25rem;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .static {
    position: static;
  }
  .col-2 {
    grid-column: 2;
  }
  .col-4 {
    grid-column: 4;
  }
  .col-5 {
    grid-column: 5;
  }
  .col-6 {
    grid-column: 6;
  }
  .col-8 {
    grid-column: 8;
  }
  .col-10 {
    grid-column: 10;
  }
  .col-12 {
    grid-column: 12;
  }
  .col-auto {
    grid-column: auto;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .me-4 {
    margin-inline-end: calc(var(--spacing) * 4);
  }
  .me-auto {
    margin-inline-end: auto;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mr-0 {
    margin-right: calc(var(--spacing) * 0);
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .hidden\! {
    display: none !important;
  }
  .inline {
    display: inline;
  }
  .table {
    display: table;
  }
  .h-100 {
    height: calc(var(--spacing) * 100);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-25 {
    width: calc(var(--spacing) * 25);
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-75 {
    width: calc(var(--spacing) * 75);
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-160 {
    width: calc(var(--spacing) * 160);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .grow-3 {
    flex-grow: 3;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-nowrap\! {
    flex-wrap: nowrap !important;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-center\! {
    align-items: center !important;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-end\! {
    align-items: flex-end !important;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-\(--wa-space-2xs\) {
    gap: var(--wa-space-2xs);
  }
  .gap-\(--wa-space-2xs\)\! {
    gap: var(--wa-space-2xs) !important;
  }
  .gap-\(--wa-space-m\) {
    gap: var(--wa-space-m);
  }
  .gap-\(--wa-space-s\) {
    gap: var(--wa-space-s);
  }
  .gap-\(--wa-space-s\)\! {
    gap: var(--wa-space-s) !important;
  }
  .gap-\(--wa-space-xs\) {
    gap: var(--wa-space-xs);
  }
  .gap-\(--wa-space-xs\)\! {
    gap: var(--wa-space-xs) !important;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .p-\(--spacing\) {
    padding: var(--spacing);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .text-end {
    text-align: end;
  }
  .text-start {
    text-align: start;
  }
  .text-\(length\:--wa-font-size-l\) {
    font-size: var(--wa-font-size-l);
  }
  .text-\(length\:--wa-font-size-m\) {
    font-size: var(--wa-font-size-m);
  }
  .text-\(length\:--wa-font-size-xl\) {
    font-size: var(--wa-font-size-xl);
  }
  .text-\[unset\]\! {
    color: unset !important;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .no-underline\! {
    text-decoration-line: none !important;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-outline-style: solid;
    }
  }
}
