/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --spacing: 0.25rem;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .static {
    position: static;
  }
  .col-2 {
    grid-column: 2;
  }
  .col-12 {
    grid-column: 12;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .hidden\! {
    display: none !important;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[400px\] {
    max-height: 400px;
  }
  .w-50 {
    width: calc(var(--spacing) * 50);
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[80rem\] {
    max-width: 80rem;
  }
  .min-w-\[0\] {
    min-width: 0;
  }
  .min-w-min {
    min-width: min-content;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-\[0\] {
    flex-basis: 0;
  }
  .basis-\[200\%\] {
    flex-basis: 200%;
  }
  .basis-full {
    flex-basis: 100%;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-nowrap\! {
    flex-wrap: nowrap !important;
  }
  .items-center {
    align-items: center;
  }
  .items-center\! {
    align-items: center !important;
  }
  .items-end\! {
    align-items: flex-end !important;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-start\! {
    align-items: flex-start !important;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end\! {
    justify-content: flex-end !important;
  }
  .gap-\(--wa-space-2xs\)\! {
    gap: var(--wa-space-2xs) !important;
  }
  .gap-\(--wa-space-m\) {
    gap: var(--wa-space-m);
  }
  .gap-\(--wa-space-s\) {
    gap: var(--wa-space-s);
  }
  .gap-\(--wa-space-xs\)\! {
    gap: var(--wa-space-xs) !important;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .p-\(--spacing\) {
    padding: var(--spacing);
  }
  .p-\(--wa-space-2xs\) {
    padding: var(--wa-space-2xs);
  }
  .py-\(--wa-space-2xs\) {
    padding-block: var(--wa-space-2xs);
  }
  .text-end {
    text-align: end;
  }
  .text-\(length\:--wa-font-size-l\) {
    font-size: var(--wa-font-size-l);
  }
  .text-\(length\:--wa-font-size-m\) {
    font-size: var(--wa-font-size-m);
  }
  .text-\(length\:--wa-font-size-xl\) {
    font-size: var(--wa-font-size-xl);
  }
  .leading-\(--wa-line-height-normal\)\! {
    --tw-leading: var(--wa-line-height-normal) !important;
    line-height: var(--wa-line-height-normal) !important;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .text-\[unset\]\! {
    color: unset !important;
  }
  .no-underline\! {
    text-decoration-line: none !important;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .\@5xl\:flex-nowrap\! {
    @container (width >= 64rem) {
      flex-wrap: nowrap !important;
    }
  }
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-leading: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
